import pytesseract
import cv2
import pyttsx3
import time

# Initialize text-to-speech engine
engine = pyttsx3.init()
engine.setProperty('rate', 125)  # Set speech rate

# Open webcam
webcam = cv2.VideoCapture(0)

print("Starting live OCR with audio output. Press 'q' to quit.")

# Variable to store the last detected text
last_text = ""

while True:
    try:
        # Capture a frame from the webcam
        ret, frame = webcam.read()
        if not ret:
            print("Failed to capture image from webcam.")
            break

        # Convert the frame to grayscale for better OCR performance
        gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

        # Perform OCR on the current frame
        text = pytesseract.image_to_string(gray_frame).strip()

        # If new text is detected, process it
        if text and text != last_text:
            print("Text Detected:")
            print(text)
            last_text = text  # Update the last detected text
            
            # Speak the detected text
            engine.say("Here is what I read:")
            engine.say(text)
            engine.runAndWait()
        
        # Display the live webcam feed with detected text overlay
        overlay_frame = frame.copy()
        cv2.putText(overlay_frame, text, (10, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2, cv2.LINE_AA)
        cv2.imshow("Live OCR Feed", overlay_frame)

        # Quit the program when 'q' is pressed
        if cv2.waitKey(1) & 0xFF == ord('q'):
            print("Exiting the program.")
            break

        # Optional: Add a small delay to prevent continuous reprocessing
        time.sleep(0.5)

    except KeyboardInterrupt:
        print("\nProgram interrupted by user.")
        break

# Release resources
webcam.release()
cv2.destroyAllWindows()
